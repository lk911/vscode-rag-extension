(program (comment) (comment) (comment) (enum_declaration name: (identifier) body: (enum_body (enum_assignment name: (property_identifier) value: (string (string_fragment))) (enum_assignment name: (property_identifier) value: (string (string_fragment))) (enum_assignment name: (property_identifier) value: (string (string_fragment))) (enum_assignment name: (property_identifier) value: (string (string_fragment))) (enum_assignment name: (property_identifier) value: (string (string_fragment))) (enum_assignment name: (property_identifier) value: (string (string_fragment))))) (comment) (enum_declaration name: (identifier) body: (enum_body (enum_assignment name: (property_identifier) value: (string (string_fragment))) (enum_assignment name: (property_identifier) value: (string (string_fragment))))) (comment) (comment) (type_alias_declaration name: (type_identifier) value: (predefined_type)) (comment) (interface_declaration name: (type_identifier) body: (interface_body (property_signature name: (property_identifier) type: (type_annotation (type_identifier))) (property_signature name: (property_identifier) type: (type_annotation (predefined_type))) (property_signature name: (property_identifier) type: (type_annotation (predefined_type))) (property_signature name: (property_identifier) type: (type_annotation (type_identifier))) (property_signature name: (property_identifier) type: (type_annotation (predefined_type))) (property_signature name: (property_identifier) type: (type_annotation (predefined_type))) (comment) (property_signature name: (property_identifier) type: (type_annotation (type_identifier))) (property_signature name: (property_identifier) type: (type_annotation (type_identifier))))) (comment) (interface_declaration name: (type_identifier) body: (interface_body (property_signature name: (property_identifier) type: (type_annotation (type_identifier))) (property_signature name: (property_identifier) type: (type_annotation (predefined_type))) (property_signature name: (property_identifier) type: (type_annotation (predefined_type))) (property_signature name: (property_identifier) type: (type_annotation (predefined_type))) (property_signature name: (property_identifier) type: (type_annotation (predefined_type))))) (comment) (comment) (class_declaration name: (type_identifier) body: (class_body (public_field_definition (accessibility_modifier) name: (property_identifier) type: (type_annotation (array_type (type_identifier)))) (public_field_definition (accessibility_modifier) name: (property_identifier) type: (type_annotation (predefined_type)) value: (number)) (method_definition name: (property_identifier) parameters: (formal_parameters) body: (statement_block (expression_statement (assignment_expression left: (member_expression object: (this) property: (property_identifier)) right: (array))) (comment) (expression_statement (call_expression function: (member_expression object: (this) property: (property_identifier)) arguments: (arguments))))) (comment) (method_definition (accessibility_modifier) name: (property_identifier) parameters: (formal_parameters) return_type: (type_annotation (predefined_type)) body: (statement_block (lexical_declaration (variable_declarator name: (identifier) value: (new_expression constructor: (identifier) arguments: (arguments)))) (expression_statement (call_expression function: (member_expression object: (member_expression object: (this) property: (property_identifier)) property: (property_identifier)) arguments: (arguments (object (pair key: (property_identifier) value: (call_expression function: (member_expression object: (this) property: (property_identifier)) arguments: (arguments))) (pair key: (property_identifier) value: (string (string_fragment))) (pair key: (property_identifier) value: (number)) (pair key: (property_identifier) value: (member_expression object: (identifier) property: (property_identifier))) (pair key: (property_identifier) value: (number)) (pair key: (property_identifier) value: (string (string_fragment))) (pair key: (property_identifier) value: (identifier)) (pair key: (property_identifier) value: (identifier))) (object (pair key: (property_identifier) value: (call_expression function: (member_expression object: (this) property: (property_identifier)) arguments: (arguments))) (pair key: (property_identifier) value: (string (string_fragment))) (pair key: (property_identifier) value: (number)) (pair key: (property_identifier) value: (member_expression object: (identifier) property: (property_identifier))) (pair key: (property_identifier) value: (number)) (pair key: (property_identifier) value: (string (string_fragment))) (pair key: (property_identifier) value: (identifier)) (pair key: (property_identifier) value: (identifier))) (object (pair key: (property_identifier) value: (call_expression function: (member_expression object: (this) property: (property_identifier)) arguments: (arguments))) (pair key: (property_identifier) value: (string (string_fragment))) (pair key: (property_identifier) value: (number)) (pair key: (property_identifier) value: (member_expression object: (identifier) property: (property_identifier))) (pair key: (property_identifier) value: (number)) (pair key: (property_identifier) value: (string (string_fragment))) (pair key: (property_identifier) value: (identifier)) (pair key: (property_identifier) value: (identifier))) (object (pair key: (property_identifier) value: (call_expression function: (member_expression object: (this) property: (property_identifier)) arguments: (arguments))) (pair key: (property_identifier) value: (string (string_fragment))) (pair key: (property_identifier) value: (number)) (pair key: (property_identifier) value: (member_expression object: (identifier) property: (property_identifier))) (pair key: (property_identifier) value: (number)) (pair key: (property_identifier) value: (string (string_fragment))) (pair key: (property_identifier) value: (identifier)) (pair key: (property_identifier) value: (identifier))) (object (pair key: (property_identifier) value: (call_expression function: (member_expression object: (this) property: (property_identifier)) arguments: (arguments))) (pair key: (property_identifier) value: (string (string_fragment))) (pair key: (property_identifier) value: (number)) (pair key: (property_identifier) value: (member_expression object: (identifier) property: (property_identifier))) (pair key: (property_identifier) value: (number)) (pair key: (property_identifier) value: (string (string_fragment))) (pair key: (property_identifier) value: (identifier)) (pair key: (property_identifier) value: (identifier))) (object (pair key: (property_identifier) value: (call_expression function: (member_expression object: (this) property: (property_identifier)) arguments: (arguments))) (pair key: (property_identifier) value: (string (string_fragment))) (pair key: (property_identifier) value: (number)) (pair key: (property_identifier) value: (member_expression object: (identifier) property: (property_identifier))) (pair key: (property_identifier) value: (number)) (pair key: (property_identifier) value: (string (string_fragment))) (pair key: (property_identifier) value: (identifier)) (pair key: (property_identifier) value: (identifier))) (object (pair key: (property_identifier) value: (call_expression function: (member_expression object: (this) property: (property_identifier)) arguments: (arguments))) (pair key: (property_identifier) value: (string (string_fragment))) (pair key: (property_identifier) value: (number)) (pair key: (property_identifier) value: (member_expression object: (identifier) property: (property_identifier))) (pair key: (property_identifier) value: (number)) (pair key: (property_identifier) value: (string (string_fragment))) (pair key: (property_identifier) value: (identifier)) (pair key: (property_identifier) value: (identifier)))))))) (comment) (method_definition (accessibility_modifier) name: (property_identifier) parameters: (formal_parameters) return_type: (type_annotation (type_identifier)) body: (statement_block (return_statement (template_string (string_fragment) (template_substitution (update_expression argument: (member_expression object: (this) property: (property_identifier)))))))) (comment) (method_definition (accessibility_modifier) name: (property_identifier) parameters: (formal_parameters (required_parameter pattern: (identifier) type: (type_annotation (predefined_type)) value: (number))) return_type: (type_annotation (generic_type name: (type_identifier) type_arguments: (type_arguments (predefined_type)))) body: (statement_block (return_statement (new_expression constructor: (identifier) arguments: (arguments (arrow_function parameter: (identifier) body: (call_expression function: (identifier) arguments: (arguments (identifier) (identifier))))))))) (comment) (method_definition (accessibility_modifier) name: (property_identifier) parameters: (formal_parameters (required_parameter pattern: (identifier) type: (type_annotation (generic_type name: (type_identifier) type_arguments: (type_arguments (type_identifier) (union_type (union_type (literal_type (string (string_fragment))) (literal_type (string (string_fragment)))) (literal_type (string (string_fragment))))))))) return_type: (type_annotation (generic_type name: (type_identifier) type_arguments: (type_arguments (type_identifier)))) body: (statement_block (expression_statement (await_expression (call_expression function: (member_expression object: (this) property: (property_identifier)) arguments: (arguments)))) (comment) (lexical_declaration (variable_declarator name: (identifier) type: (type_annotation (type_identifier)) value: (object (spread_element (identifier)) (pair key: (property_identifier) value: (call_expression function: (member_expression object: (this) property: (property_identifier)) arguments: (arguments))) (pair key: (property_identifier) value: (new_expression constructor: (identifier) arguments: (arguments))) (pair key: (property_identifier) value: (new_expression constructor: (identifier) arguments: (arguments)))))) (expression_statement (call_expression function: (member_expression object: (member_expression object: (this) property: (property_identifier)) property: (property_identifier)) arguments: (arguments (identifier)))) (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (template_string (string_fragment) (template_substitution (member_expression object: (identifier) property: (property_identifier))) (string_fragment) (template_substitution (member_expression object: (identifier) property: (property_identifier))) (string_fragment))))) (return_statement (identifier)))) (comment) (method_definition (accessibility_modifier) name: (property_identifier) parameters: (formal_parameters (required_parameter pattern: (identifier) type: (type_annotation (type_identifier)))) return_type: (type_annotation (generic_type name: (type_identifier) type_arguments: (type_arguments (union_type (type_identifier) (literal_type (undefined)))))) body: (statement_block (expression_statement (await_expression (call_expression function: (member_expression object: (this) property: (property_identifier)) arguments: (arguments)))) (return_statement (call_expression function: (member_expression object: (member_expression object: (this) property: (property_identifier)) property: (property_identifier)) arguments: (arguments (arrow_function parameter: (identifier) body: (binary_expression left: (member_expression object: (identifier) property: (property_identifier)) right: (identifier)))))))) (comment) (method_definition (accessibility_modifier) name: (property_identifier) parameters: (formal_parameters (required_parameter pattern: (identifier) type: (type_annotation (type_identifier))) (required_parameter pattern: (identifier) type: (type_annotation (generic_type name: (type_identifier) type_arguments: (type_arguments (type_identifier)))))) return_type: (type_annotation (generic_type name: (type_identifier) type_arguments: (type_arguments (union_type (type_identifier) (literal_type (undefined)))))) body: (statement_block (expression_statement (await_expression (call_expression function: (member_expression object: (this) property: (property_identifier)) arguments: (arguments)))) (lexical_declaration (variable_declarator name: (identifier) value: (call_expression function: (member_expression object: (member_expression object: (this) property: (property_identifier)) property: (property_identifier)) arguments: (arguments (arrow_function parameter: (identifier) body: (binary_expression left: (member_expression object: (identifier) property: (property_identifier)) right: (identifier))))))) (if_statement condition: (parenthesized_expression (binary_expression left: (identifier) right: (unary_expression argument: (number)))) consequence: (statement_block (expression_statement (assignment_expression left: (subscript_expression object: (member_expression object: (this) property: (property_identifier)) index: (identifier)) right: (object (spread_element (subscript_expression object: (member_expression object: (this) property: (property_identifier)) index: (identifier))) (spread_element (identifier)) (pair key: (property_identifier) value: (new_expression constructor: (identifier) arguments: (arguments))) (comment)))) (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (template_string (string_fragment) (template_substitution (member_expression object: (subscript_expression object: (member_expression object: (this) property: (property_identifier)) index: (identifier)) property: (property_identifier))) (string_fragment) (template_substitution (identifier)) (string_fragment))))) (return_statement (subscript_expression object: (member_expression object: (this) property: (property_identifier)) index: (identifier))))) (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (template_string (string_fragment) (template_substitution (identifier)) (string_fragment))))) (return_statement (undefined)))) (comment) (method_definition (accessibility_modifier) name: (property_identifier) parameters: (formal_parameters (required_parameter pattern: (identifier) type: (type_annotation (type_identifier)))) return_type: (type_annotation (generic_type name: (type_identifier) type_arguments: (type_arguments (predefined_type)))) body: (statement_block (expression_statement (await_expression (call_expression function: (member_expression object: (this) property: (property_identifier)) arguments: (arguments)))) (lexical_declaration (variable_declarator name: (identifier) value: (member_expression object: (member_expression object: (this) property: (property_identifier)) property: (property_identifier)))) (expression_statement (assignment_expression left: (member_expression object: (this) property: (property_identifier)) right: (call_expression function: (member_expression object: (member_expression object: (this) property: (property_identifier)) property: (property_identifier)) arguments: (arguments (arrow_function parameter: (identifier) body: (binary_expression left: (member_expression object: (identifier) property: (property_identifier)) right: (identifier))))))) (if_statement condition: (parenthesized_expression (binary_expression left: (member_expression object: (member_expression object: (this) property: (property_identifier)) property: (property_identifier)) right: (identifier))) consequence: (statement_block (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (template_string (string_fragment) (template_substitution (identifier)))))) (return_statement (true)))) (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (template_string (string_fragment) (template_substitution (identifier)) (string_fragment))))) (return_statement (false)))) (comment) (method_definition (accessibility_modifier) name: (property_identifier) parameters: (formal_parameters) return_type: (type_annotation (generic_type name: (type_identifier) type_arguments: (type_arguments (array_type (type_identifier))))) body: (statement_block (expression_statement (await_expression (call_expression function: (member_expression object: (this) property: (property_identifier)) arguments: (arguments)))) (return_statement (array (spread_element (member_expression object: (this) property: (property_identifier))))) (comment))) (comment) (method_definition (accessibility_modifier) name: (property_identifier) parameters: (formal_parameters (required_parameter pattern: (identifier) type: (type_annotation (type_identifier)))) return_type: (type_annotation (generic_type name: (type_identifier) type_arguments: (type_arguments (array_type (type_identifier))))) body: (statement_block (expression_statement (await_expression (call_expression function: (member_expression object: (this) property: (property_identifier)) arguments: (arguments)))) (lexical_declaration (variable_declarator name: (identifier) value: (array (spread_element (member_expression object: (this) property: (property_identifier)))))) (comment) (if_statement condition: (parenthesized_expression (member_expression object: (identifier) property: (property_identifier))) consequence: (statement_block (expression_statement (assignment_expression left: (identifier) right: (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (arrow_function parameter: (identifier) body: (binary_expression left: (member_expression object: (identifier) property: (property_identifier)) right: (member_expression object: (identifier) property: (property_identifier)))))))))) (if_statement condition: (parenthesized_expression (binary_expression left: (member_expression object: (identifier) property: (property_identifier)) right: (undefined))) consequence: (statement_block (expression_statement (assignment_expression left: (identifier) right: (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (arrow_function parameter: (identifier) body: (non_null_expression (binary_expression left: (member_expression object: (identifier) property: (property_identifier)) right: (member_expression object: (identifier) property: (property_identifier))))))))))) (if_statement condition: (parenthesized_expression (binary_expression left: (member_expression object: (identifier) property: (property_identifier)) right: (undefined))) consequence: (statement_block (expression_statement (assignment_expression left: (identifier) right: (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (arrow_function parameter: (identifier) body: (non_null_expression (binary_expression left: (member_expression object: (identifier) property: (property_identifier)) right: (member_expression object: (identifier) property: (property_identifier))))))))))) (if_statement condition: (parenthesized_expression (member_expression object: (identifier) property: (property_identifier))) consequence: (statement_block (expression_statement (assignment_expression left: (identifier) right: (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (arrow_function parameter: (identifier) body: (binary_expression left: (member_expression object: (identifier) property: (property_identifier)) right: (number))))))))) (if_statement condition: (parenthesized_expression (member_expression object: (identifier) property: (property_identifier))) consequence: (statement_block (lexical_declaration (variable_declarator name: (identifier) value: (call_expression function: (member_expression object: (member_expression object: (identifier) property: (property_identifier)) property: (property_identifier)) arguments: (arguments)))) (expression_statement (assignment_expression left: (identifier) right: (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (arrow_function parameter: (identifier) body: (binary_expression left: (call_expression function: (member_expression object: (call_expression function: (member_expression object: (member_expression object: (identifier) property: (property_identifier)) property: (property_identifier)) arguments: (arguments)) property: (property_identifier)) arguments: (arguments (identifier))) right: (parenthesized_expression (binary_expression left: (member_expression object: (identifier) property: (property_identifier)) right: (call_expression function: (member_expression object: (call_expression function: (member_expression object: (member_expression object: (identifier) property: (property_identifier)) property: (property_identifier)) arguments: (arguments)) property: (property_identifier)) arguments: (arguments (identifier))))))))))))) (return_statement (identifier)))) (comment) (method_definition (accessibility_modifier) name: (property_identifier) type_parameters: (type_parameters (type_parameter name: (type_identifier) constraint: (constraint (type_identifier)))) parameters: (formal_parameters (required_parameter pattern: (identifier) type: (type_annotation (array_type (type_identifier)))) (required_parameter pattern: (identifier) type: (type_annotation (index_type_query (type_identifier)))) (required_parameter pattern: (identifier) type: (type_annotation (type_identifier)))) return_type: (type_annotation (array_type (type_identifier))) body: (statement_block (comment) (lexical_declaration (variable_declarator name: (identifier) value: (array (spread_element (identifier))))) (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (arrow_function parameters: (formal_parameters (required_parameter pattern: (identifier)) (required_parameter pattern: (identifier))) body: (statement_block (lexical_declaration (variable_declarator name: (identifier) value: (subscript_expression object: (identifier) index: (identifier)))) (lexical_declaration (variable_declarator name: (identifier) value: (subscript_expression object: (identifier) index: (identifier)))) (comment) (if_statement condition: (parenthesized_expression (binary_expression left: (binary_expression left: (unary_expression argument: (identifier)) right: (string (string_fragment))) right: (binary_expression left: (unary_expression argument: (identifier)) right: (string (string_fragment))))) consequence: (statement_block (return_statement (ternary_expression condition: (binary_expression left: (identifier) right: (member_expression object: (identifier) property: (property_identifier))) consequence: (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (identifier))) alternative: (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (identifier)))))) alternative: (else_clause (if_statement condition: (parenthesized_expression (binary_expression left: (binary_expression left: (unary_expression argument: (identifier)) right: (string (string_fragment))) right: (binary_expression left: (unary_expression argument: (identifier)) right: (string (string_fragment))))) consequence: (statement_block (return_statement (ternary_expression condition: (binary_expression left: (identifier) right: (member_expression object: (identifier) property: (property_identifier))) consequence: (binary_expression left: (identifier) right: (identifier)) alternative: (binary_expression left: (identifier) right: (identifier))))) alternative: (else_clause (if_statement condition: (parenthesized_expression (binary_expression left: (binary_expression left: (identifier) right: (identifier)) right: (binary_expression left: (identifier) right: (identifier)))) consequence: (statement_block (comment) (lexical_declaration (variable_declarator name: (identifier) value: (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments)))) (lexical_declaration (variable_declarator name: (identifier) value: (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments)))) (return_statement (ternary_expression condition: (binary_expression left: (identifier) right: (member_expression object: (identifier) property: (property_identifier))) consequence: (binary_expression left: (identifier) right: (identifier)) alternative: (binary_expression left: (identifier) right: (identifier)))))))))) (comment) (return_statement (number))))))) (return_statement (identifier)))))) (comment) (function_declaration name: (identifier) parameters: (formal_parameters) body: (statement_block (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (string (string_fragment))))) (lexical_declaration (variable_declarator name: (identifier) value: (new_expression constructor: (identifier) arguments: (arguments)))) (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (string (escape_sequence) (string_fragment))))) (lexical_declaration (variable_declarator name: (identifier) value: (await_expression (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments))))) (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (arrow_function parameter: (identifier) body: (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (template_string (string_fragment) (template_substitution (member_expression object: (identifier) property: (property_identifier))) (string_fragment) (template_substitution (member_expression object: (identifier) property: (property_identifier))) (string_fragment) (template_substitution (call_expression function: (member_expression object: (member_expression object: (identifier) property: (property_identifier)) property: (property_identifier)) arguments: (arguments (number)))) (string_fragment) (template_substitution (member_expression object: (identifier) property: (property_identifier))) (string_fragment) (template_substitution (member_expression object: (identifier) property: (property_identifier)))))))))) (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (string (escape_sequence) (string_fragment))))) (lexical_declaration (variable_declarator name: (identifier) value: (await_expression (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (object (pair key: (property_identifier) value: (string (string_fragment))) (pair key: (property_identifier) value: (number)) (pair key: (property_identifier) value: (member_expression object: (identifier) property: (property_identifier))) (pair key: (property_identifier) value: (number)) (pair key: (property_identifier) value: (string (string_fragment))))))))) (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (string (escape_sequence) (string_fragment))))) (lexical_declaration (variable_declarator name: (identifier) value: (await_expression (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (member_expression object: (identifier) property: (property_identifier))))))) (if_statement condition: (parenthesized_expression (identifier)) consequence: (statement_block (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (template_string (string_fragment) (template_substitution (member_expression object: (identifier) property: (property_identifier)))))))) alternative: (else_clause (statement_block (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (template_string (string_fragment) (template_substitution (member_expression object: (identifier) property: (property_identifier))) (string_fragment)))))))) (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (string (escape_sequence) (string_fragment))))) (lexical_declaration (variable_declarator name: (identifier) value: (subscript_expression object: (parenthesized_expression (await_expression (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (object (pair key: (property_identifier) value: (string (string_fragment)))))))) index: (number)))) (if_statement condition: (parenthesized_expression (identifier)) consequence: (statement_block (expression_statement (await_expression (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (member_expression object: (identifier) property: (property_identifier)) (object (pair key: (property_identifier) value: (number)) (pair key: (property_identifier) value: (number))))))))) (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (string (escape_sequence) (string_fragment))))) (lexical_declaration (variable_declarator name: (identifier) value: (await_expression (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (object (pair key: (property_identifier) value: (member_expression object: (identifier) property: (property_identifier))) (pair key: (property_identifier) value: (true)) (pair key: (property_identifier) value: (number)))))))) (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (arrow_function parameter: (identifier) body: (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (template_string (string_fragment) (template_substitution (member_expression object: (identifier) property: (property_identifier))) (string_fragment) (template_substitution (call_expression function: (member_expression object: (member_expression object: (identifier) property: (property_identifier)) property: (property_identifier)) arguments: (arguments (number)))) (string_fragment) (template_substitution (member_expression object: (identifier) property: (property_identifier)))))))))) (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (string (escape_sequence) (string_fragment))))) (lexical_declaration (variable_declarator name: (identifier) value: (await_expression (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (object (pair key: (property_identifier) value: (member_expression object: (identifier) property: (property_identifier))) (pair key: (property_identifier) value: (string (string_fragment))))))))) (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (arrow_function parameter: (identifier) body: (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (template_string (string_fragment) (template_substitution (member_expression object: (identifier) property: (property_identifier))) (string_fragment) (template_substitution (member_expression object: (identifier) property: (property_identifier)))))))))) (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (string (escape_sequence) (string_fragment))))) (expression_statement (assignment_expression left: (identifier) right: (await_expression (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments))))) (comment) (lexical_declaration (variable_declarator name: (identifier) value: (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (identifier) (string (string_fragment)) (member_expression object: (identifier) property: (property_identifier)))))) (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (arrow_function parameter: (identifier) body: (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (template_string (string_fragment) (template_substitution (member_expression object: (identifier) property: (property_identifier))) (string_fragment) (template_substitution (call_expression function: (member_expression object: (member_expression object: (identifier) property: (property_identifier)) property: (property_identifier)) arguments: (arguments (number))))))))))) (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (string (escape_sequence) (string_fragment))))) (lexical_declaration (variable_declarator name: (identifier) value: (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (identifier) (string (string_fragment)) (member_expression object: (identifier) property: (property_identifier)))))) (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (arrow_function parameter: (identifier) body: (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (template_string (string_fragment) (template_substitution (member_expression object: (identifier) property: (property_identifier))) (string_fragment) (template_substitution (member_expression object: (identifier) property: (property_identifier)))))))))) (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (string (escape_sequence) (string_fragment))))) (lexical_declaration (variable_declarator name: (identifier) value: (subscript_expression object: (parenthesized_expression (await_expression (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (object (pair key: (property_identifier) value: (string (string_fragment)))))))) index: (number)))) (if_statement condition: (parenthesized_expression (identifier)) consequence: (statement_block (lexical_declaration (variable_declarator name: (identifier) value: (await_expression (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (member_expression object: (identifier) property: (property_identifier))))))) (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (template_string (string_fragment) (template_substitution (identifier)))))))) (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (string (escape_sequence) (string_fragment))))) (expression_statement (assignment_expression left: (identifier) right: (await_expression (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments))))) (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (arrow_function parameter: (identifier) body: (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (template_string (string_fragment) (template_substitution (member_expression object: (identifier) property: (property_identifier))) (string_fragment) (template_substitution (member_expression object: (identifier) property: (property_identifier)))))))))) (expression_statement (call_expression function: (member_expression object: (identifier) property: (property_identifier)) arguments: (arguments (string (escape_sequence) (string_fragment))))))) (comment) (expression_statement (call_expression function: (member_expression object: (call_expression function: (identifier) arguments: (arguments)) property: (property_identifier)) arguments: (arguments (member_expression object: (identifier) property: (property_identifier))))))